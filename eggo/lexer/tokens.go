package lexer

type TokenType int

const (
	Unspecified TokenType = iota
	_TEST_A
	_TEST_B
	_TEST_C
	_TEST_D
	ALWAYS_LOOP
	AND
	ANGLE_CLOSE
	ANGLE_OPEN
	APPEND_FILE
	ARROW
	AS
	ASSERT
	ASSIGN
	ASYNC
	BREAK
	BY
	CATCH
	CLASS
	COLON
	COMMA
	CONCAT
	CONCAT_ASSIGN
	CONST
	CONTINUE
	CURLY_CLOSE
	CURLY_OPEN
	CURRY
	DECLARE
	DIVIDE
	DIVIDE_ASSIGN
	DO
	ELIF
	ELLIPSIS
	ELSE
	EQUALS
	FALSE
	FN
	FOR
	GTE
	IF
	IMPORT
	IN
	INT_DIV
	INT_DIV_ASSIGN
	LAMBDA
	LTE
	MINUS
	MINUS_ASSIGN
	MOD
	MOD_ASSIGN
	NAMESPACE
	NOT
	NOT_EQUALS
	OR
	PAREN_CLOSE
	PAREN_OPEN
	PIPE
	PIPE_ASSIGN
	PLUS
	PLUS_ASSIGN
	POWER
	POWER_ASSIGN
	RANGE
	RETURN
	SAY
	SEMICOLON
	SEQ_AND
	SEQ_AND_ASSIGN
	SEQ_OR
	SEQ_OR_ASSIGN
	UNIT_SIZE
	SQUARE_CLOSE
	SQUARE_OPEN
	UNIT_TIME
	TIMES
	TIMES_ASSIGN
	TRUE
	TRY
	VAR
	WHILE
	WITH
	XOR
)
